# Supabase Manual Setup Guide for A S Guru Academy Membership Application

## Step 1: Create a New Supabase Project

1. **Go to Supabase Dashboard**
   - Visit https://supabase.com
   - Sign in to your account
   - Click "New Project"

2. **Project Setup**
   - Choose your organization
   - Project Name: `as-guru-academy` (or your preferred name)
   - Database Password: Create a strong password and save it
   - Region: Choose closest to your location
   - Click "Create new project"

3. **Wait for Setup**
   - The project will take 2-3 minutes to initialize
   - You'll see a green "Active" status when ready

## Step 2: Create the Applications Table

1. **Navigate to Table Editor**
   - In the left sidebar, click "Table Editor"
   - Click "Create a new table"

2. **Table Configuration**
   - **Table Name**: `applications`
   - **Description**: "Membership application submissions"
   - **Enable Row Level Security (RLS)**: ✅ Check this box

3. **Add Table Columns**
   Click "Add column" for each of these fields:

   **Column 1:**
   - Name: `id`
   - Type: `uuid`
   - Default Value: `gen_random_uuid()`
   - Primary Key: ✅ Check this
   - Is Nullable: ❌ Uncheck this

   **Column 2:**
   - Name: `card_type`
   - Type: `text`
   - Default Value: (leave empty)
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ❌ Uncheck this

   **Column 3:**
   - Name: `name`
   - Type: `text`
   - Default Value: (leave empty)
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ❌ Uncheck this

   **Column 4:**
   - Name: `email`
   - Type: `text`
   - Default Value: (leave empty)
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ❌ Uncheck this

   **Column 5:**
   - Name: `phone`
   - Type: `text`
   - Default Value: (leave empty)
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ❌ Uncheck this

   **Column 6:**
   - Name: `city`
   - Type: `text`
   - Default Value: (leave empty)
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ❌ Uncheck this

   **Column 7:**
   - Name: `photo_url`
   - Type: `text`
   - Default Value: (leave empty)
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ✅ Check this

   **Column 8:**
   - Name: `application_date_time`
   - Type: `timestamptz`
   - Default Value: `now()`
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ❌ Uncheck this

   **Column 9:**
   - Name: `status`
   - Type: `text`
   - Default Value: `pending`
   - Primary Key: ❌ Uncheck this
   - Is Nullable: ❌ Uncheck this

4. **Save the Table**
   - Click "Save" at the bottom right
   - Your table will be created

## Step 3: Set Up Row Level Security (RLS) Policies

1. **Go to Authentication > Policies**
   - Click "Authentication" in the left sidebar
   - Click "Policies"
   - Find your `applications` table

2. **Create Insert Policy**
   - Click "New Policy" next to the `applications` table
   - Click "Create a policy from scratch"
   - **Policy Name**: `Allow public inserts`
   - **Allowed Operation**: `INSERT`
   - **Target Roles**: `public`
   - **USING expression**: (leave empty)
   - **WITH CHECK expression**: `true`
   - Click "Review" then "Save Policy"

3. **Create Select Policy (Optional - for admin viewing)**
   - Click "New Policy" again
   - Click "Create a policy from scratch"
   - **Policy Name**: `Allow authenticated read`
   - **Allowed Operation**: `SELECT`
   - **Target Roles**: `authenticated`
   - **USING expression**: `true`
   - **WITH CHECK expression**: (leave empty)
   - Click "Review" then "Save Policy"

## Step 4: Create Storage Bucket for Photos

1. **Navigate to Storage**
   - Click "Storage" in the left sidebar
   - Click "Create a new bucket"

2. **Bucket Configuration**
   - **Bucket Name**: `Client_Photos`
   - **Public bucket**: ✅ Check this box
   - **File size limit**: 50MB (or your preference)
   - **Allowed MIME types**: `image/*`
   - Click "Create bucket"

3. **Set Bucket Policies**
   - Click on your `Client_Photos` bucket
   - Click "Policies" tab
   - Click "Add policy"

   **Policy 1 - Allow Public Uploads:**
   - **Policy Name**: `Allow public uploads`
   - **Allowed Operation**: `INSERT`
   - **Target Roles**: `public`
   - **USING expression**: `bucket_id = 'Client_Photos'`
   - Click "Review" then "Save Policy"

   **Policy 2 - Allow Public Read:**
   - Click "Add policy" again
   - **Policy Name**: `Allow public read`
   - **Allowed Operation**: `SELECT`
   - **Target Roles**: `public`
   - **USING expression**: `bucket_id = 'Client_Photos'`
   - Click "Review" then "Save Policy"

## Step 5: Get Your Project Credentials

1. **Go to Project Settings**
   - Click "Settings" (gear icon) in the left sidebar
   - Click "API" in the settings menu

2. **Copy Your Credentials**
   - **Project URL**: Copy this URL
   - **anon public key**: Copy this key
   - **service_role secret**: Copy this key (keep it secure!)

3. **Update Your HTML File**
   - Replace `YOUR_SUPABASE_URL` with your Project URL
   - Replace `YOUR_SUPABASE_ANON_KEY` with your anon public key

## Step 6: Test Your Setup

1. **Open your HTML file in a browser**
2. **Fill out the form with test data**
3. **Submit the form**
4. **Check your Supabase dashboard**:
   - Go to "Table Editor"
   - Click on the `applications` table
   - You should see your test submission
   - Go to "Storage" > `Client_Photos` to see the uploaded photo

## Important Notes

- **Security**: Never share your `service_role` key publicly
- **RLS**: Row Level Security is enabled to protect your data
- **File Size**: The form compresses images to 2MB max
- **Phone Validation**: Only accepts 10-digit phone numbers
- **Email Validation**: Standard email format validation
- **WhatsApp Integration**: Pre-filled messages for user convenience

## Troubleshooting

**If form submission fails:**
1. Check browser console for errors
2. Verify your Supabase URL and keys are correct
3. Ensure RLS policies are properly configured
4. Check storage bucket permissions

**If photos don't upload:**
1. Verify storage bucket is public
2. Check storage policies
3. Ensure file size is under limit
4. Verify MIME type is image/*

**If you can't see submitted data:**
1. Check if you're looking at the correct table
2. Verify RLS policies allow your user role to read
3. Check for any console errors during submission

Your membership application system is now ready to use! 🎉